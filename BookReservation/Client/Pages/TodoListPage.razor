@page "/todo-list"

<div class="container">
	<div class="row">
		<div class="col-md-3">
			<input class="btn btn-primary btn-sm" type="button" @onclick="GoToTodoAddPage" value="Add New">
		</div>
	</div>
	<br>
	<div class="row">
		@{
			if (TodoList.Count > 0)
			{
				foreach (var todo in TodoList)
				{
					<TodoComponent Todo="@todo" Delete="(id) => DeleteTodo(todo.Id)" />
				}
			}
		}
	</div>
</div>



@code {

	[Inject]
	NavigationManager NavigationManager { get; set; }

	List<Todo> TodoList = new List<Todo>();
	protected async override Task OnInitializedAsync()
	{
		Console.WriteLine("OnInitializedAsync");

		TodoList = TodoMemoryData.TodoList();

		await Task.FromResult("");

	}

	//protected override void OnInitialized()
	//{
	// Console.WriteLine("OnInitialized");
	//
	// TodoList = TodoMemoryData.TodoList();
	//
	// TodoList.ForEach(s => Console.WriteLine($"{s.Id} {s.Title}"));
	//
	// base.OnInitialized();
	//}

	private void GoToTodoAddPage()
	{
		NavigationManager.NavigateTo("/todo/add");
	}

	private void DeleteTodo(int id)
	{
		var todo = TodoList.First(s => s.Id == id);
		TodoList.Remove(todo);
	}

}
