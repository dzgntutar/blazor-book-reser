@page "/todo-list"

<div class="container">
	<div class="row">
		<div class="col-md-3">
			<input class="btn btn-primary btn-sm" type="button" @onclick="GoToTodoAddPage" value="Add New">
		</div>
	</div>
	<br>
	<div class="row">
		@{
			if (TodoList.Count > 0)
			{
				foreach (var todo in TodoList)
				{
					<TodoComponent BgColor="@(todo.Statu switch {
																	TaskStatu.Todo => "warning",
																	TaskStatu.Inprogress => "secondary",
																	TaskStatu.Completed => "primary",
																	_ => "primary"
																})" Title="@todo.Title" Description="@todo.Description" Status="@(todo.Statu.ToString())" />
				}
			}
		}
	</div>
</div>



@code {

	[Inject]
	NavigationManager NavigationManager { get; set; }

	List<Todo> TodoList = new List<Todo>();
	protected async override Task OnInitializedAsync()
	{
		await Task.Delay(10000);
		//TodoList.Add(new Todo
		// {
		// Id = 1,
		// Title = "Selam",
		// Description = ""
		// });
	}

	protected override void OnInitialized()
	{
		TodoList = TodoCacheData.TodoList();
		base.OnInitialized();
	}

	private void GoToTodoAddPage()
	{
		NavigationManager.NavigateTo("/todo/add");
	}

}
