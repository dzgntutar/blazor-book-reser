@page "/user/add"
@page "/user/update/{UserId:int}"
@using BookReservation.Client.Utils
@using BookReservation.Shared.Dtos
@inject HttpClient Http

<EditForm Model="@User" OnValidSubmit="SaveOrUpdate">
	<div class="row form-group mb-3">
		<div class="col-md-2">
			<label>Id</label>
		</div>
		<div class="col-md-6">
			@UserId
		</div>
	</div>
	<div class="row form-group mb-3">
		<div class="col-md-2">
			<label>First Name</label>
		</div>
		<div class="col-md-6">
			<InputText @bind-Value="User.FirstName" class="form-control"></InputText>
		</div>
	</div>
	<div class="row form-group mb-3">
		<div class="col-md-2">
			<label>Last Name</label>
		</div>
		<div class="col-md-6">
			<InputText @bind-Value="User.LastName" class="form-control"></InputText>
		</div>
	</div>
	<div class="row form-group mb-3">
		<div class="col-md-2">
			<label>Email</label>
		</div>
		<div class="col-md-6">
			<InputText @bind-Value="User.Email" class="form-control"></InputText>
		</div>
	</div>
	<div class="row form-group mb-3">
		<div class="col-md-2">
			<label>User Name</label>
		</div>
		<div class="col-md-6">
			<InputText @bind-Value="User.UserName" class="form-control"></InputText>
		</div>
	</div>
	<div class="row form-group mb-3">
		<div class="col-md-2">
			<label>Password</label>
		</div>
		<div class="col-md-6">
			<InputText @bind-Value="User.Password" class="form-control"></InputText>
		</div>
	</div>
	<div class="form-group">
		<input type="submit" class="btn btn-primary" value="@buttonText">
		<input type="button" class="btn btn-primary" value="Back To List" @onclick="BackToDoList">
	</div>
</EditForm>

@code {

	[Parameter]
	public int UserId { get; set; }

	private UserSaveRequestDto User = new UserSaveRequestDto();

	private string buttonText = "Save";

	[Inject]
	NavigationManager NavigationManager { get; set; }

	[Inject]
	ModalManager ModalManager { get; set; }

	protected override async Task OnInitializedAsync()
	{
		Console.WriteLine("User ID: " + UserId);

		if (UserId > 0)
		{
			var response = await Http.GetFromJsonAsync<GResponse<UserGetByIdDto>>($"/api/users/{UserId}");
			if (response.IsSucces)
			{
				var u = response.Data;
				User.FirstName = u.FirstName ?? "";
				User.LastName = u.LastName ?? "";
				User.UserName = u.UserName ?? "";
				User.Email = u.Email ?? "";

				buttonText = "Update";
			}
		}
	}

	private async Task SaveOrUpdate()
	{
		if (UserId > 0)//update
		{
		}
		else
		{//save
			var response = await Http.PostAsJsonAsync<UserSaveRequestDto>("/api/users", User);
			if(response.IsSuccessStatusCode)
			{
				var result = await response.Content.ReadFromJsonAsync<GResponse<UserSaveResponseDto>>();
				if(result.IsSucces)
				{
					NavigationManager.NavigateTo("/user-list");
				}
				else
					await ModalManager.ShowMessageAsync("Error", result.Message);
			}
		}
	}
	private void BackToDoList()
	{

	}
}