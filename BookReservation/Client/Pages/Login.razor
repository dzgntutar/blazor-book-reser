@page "/login"
@using System.Text.Json
@using System.Text
@using BookReservation.Client.Utils
@using BookReservation.Shared.Dtos
@inject HttpClient Http

<div class="container">
	<div class="d-flex justify-content-center">
		<div class="card w-50 ">
			<div class="card-header text-center">
				<h2>Login</h2>
			</div>
			<div class="card-body">
				<EditForm Model="@user">
					<div class="form-group">
						<label>Email</label>
						<InputText class="form-control" @bind-Value="user.Email"></InputText>
					</div>
					<div class="form-group">
						<label>Password</label>
						<InputText type="password" class="form-control" @bind-Value="user.Password"></InputText>
					</div>
					<div class="form-group mt-2 d-flex  justify-content-end">
						<AddButtonComponent Color="primary" Text="Login" OnClick="Login_Click"></AddButtonComponent>
					</div>
				</EditForm>
			</div>
		</div>
	</div>
</div>


@code {
	UserLoginDto user = new UserLoginDto() { Email = "duzgun@tutar.com", Password = "123." };

	[Inject]
	ILocalStorageService LocalStorageService { get; set; }

	[Inject]
	AuthenticationStateProvider AuthenticationStateProvider { get; set; }

	[Inject]
	HttpClient Client { get; set; }

	[Inject]
	NavigationManager NavigationManager { get; set; }

	private async void Login_Click()
	{
		var response = await Http.PostAsJsonAsync("/api/users", user);

		if (response.IsSuccessStatusCode)
		{
			var res = await response.Content.ReadFromJsonAsync<GResponse<UserLoginResponseDTO>>();

			await LocalStorageService.SetItemAsync("token", res.Data.ApiToken);
			await LocalStorageService.SetItemAsync("email", res.Data.User.Email);
			await LocalStorageService.SetItemAsync("userId", res.Data.User.Id);
			await LocalStorageService.SetItemAsync("userName", $"{res.Data.User.FirstName} {res.Data.User.LastName}");

			(AuthenticationStateProvider as AuthStateProvider).NotifyUserLogin(res.Data.User.Email);

			Client.DefaultRequestHeaders.Authorization = new System.Net.Http.Headers.AuthenticationHeaderValue("Bearer", res.Data.ApiToken);

			NavigationManager.NavigateTo("/");
		}
		else
		{
			//Error message
		}
	}

}
